@import '~styles/framework';

$border-width: 1px;
$sizes: (
  sm: (
    padding-top-bottom: spacing(0.25),
    padding-right-left: spacing(1),
    icon-container-size: spacing(3),
    font-style: kramfors
  ),
  md: (
    padding-top-bottom: spacing(1),
    padding-right-left: spacing(2),
    icon-container-size: spacing(3),
    font-style: bukarest
  ),
  lg: (
    padding-top-bottom: spacing(1.75),
    padding-right-left: spacing(1.5),
    icon-container-size: spacing(3),
    font-style: kramfors
  )
);
$colors: (
  light: (
    default: (
      background-color: get-color(light),
      border-color: get-color(alpha, 62),
      color: get-color(dark)
    ),
    hover: (
      background-color: get-color(dark, 96)
    )
  ),
  transparent: (
    default: (
      background-color: inherit,
      box-shadow: none,
      border-color: none
    ),
    hover: (
      background-color: inherit,
      box-shadow: none,
      border-color: none
    )
  )
);

.root {
  display: inline-block;
}

.selectHolder {
  user-select: none;
  position: relative;
}

.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.label {
  font-weight: 700;
}

.arrow {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  border-radius: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.select {
  display: block;
  color: inherit;
  width: 100%;
  height: 100%;
  cursor: pointer;
  outline: none;
  appearance: none;
  border: none;
  border-radius: 4px;
  @include truncate();
  transition: ease(background-color);

  .disabled & {
    opacity: 1;
    cursor: not-allowed;
  }

  &::-ms-expand {
    display: none;
  }
}

@each $name, $styles in $sizes {
  $font-styles: map-get($all-font-styles, map-get($styles, font-style));

  .#{$name}Size {
    .arrow {
      width: map-get($styles, icon-container-size);
      right: map-get($styles, padding-right-left);
    }

    .select {
      @include get-font-style(map-get($styles, font-style));
      padding: map-get($styles, padding-top-bottom)
        map-get($styles, padding-right-left);
      padding-right: calc(
        #{map-get($styles, icon-container-size)} +
          #{map-get($styles, padding-right-left)}
      );
    }

    &.rounded {
      .select {
        border-radius: calc(
          #{map-get($font-styles, line-height)} +
            (#{map-get($styles, padding-top-bottom)} * 2)
        );
      }
    }
  }
}

@each $name, $styles in $colors {
  $default: map-get($styles, default);
  $hover: map-get($styles, hover);

  .#{$name}Color {
    .select {
      background-color: map-get($default, background-color);
      color: map-get($default, color);
      box-shadow: inset 0 0 0 $border-width map-get($default, border-color);
    }

    &:not(.disabled) .select:hover {
      background-color: map-get($hover, background-color);
    }
  }
}

.fullWidth {
  width: 100%;
  display: block;
}
